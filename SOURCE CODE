"""
To-Do List Application

Author: [Your Name]
Date: [Current Date]

Description:
This is a simple To-Do List application built using Python and Tkinter.
The application allows users to:
- Add new tasks
- View the list of tasks
- Delete tasks
- Save tasks to a file so they persist after closing the application

Features:
- User-friendly GUI with Tkinter
- Persistent storage using a text file
- Error handling for empty task entries and invalid deletions

How to Use:
1. Run the script using `python todo.py`
2. Type a task in the input field and click 'Add Task'
3. Select a task from the list and click 'Delete Task' to remove it
4. The tasks are saved automatically when you add or delete them

Future Improvements:
- Add a feature to mark tasks as completed
- Store tasks in a database instead of a text file
- Improve UI with better styling

"""

import tkinter as tk
from tkinter import messagebox
import os

TODO_FILE = "tasks.txt"

def load_tasks():
    """Load tasks from file."""
    if not os.path.exists(TODO_FILE):
        return []
    with open(TODO_FILE, "r") as file:
        return [line.strip() for line in file.readlines()]

def save_tasks():
    """Save tasks to file."""
    with open(TODO_FILE, "w") as file:
        file.writelines(f"{task}\n" for task in tasks)

def add_task():
    """Add a new task."""
    task = task_entry.get().strip()
    if task:
        tasks.append(task)
        save_tasks()
        update_listbox()
        task_entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Warning", "Task cannot be empty!")

def delete_task():
    """Delete the selected task."""
    try:
        selected = task_listbox.curselection()[0]
        tasks.pop(selected)
        save_tasks()
        update_listbox()
    except IndexError:
        messagebox.showwarning("Warning", "No task selected!")

def update_listbox():
    """Refresh the task listbox."""
    task_listbox.delete(0, tk.END)
    for task in tasks:
        task_listbox.insert(tk.END, task)

# Load tasks from file
tasks = load_tasks()

# GUI Setup
root = tk.Tk()
root.title("To-Do List")
root.geometry("400x400")

frame = tk.Frame(root)
frame.pack(pady=10)

task_entry = tk.Entry(frame, width=40)
task_entry.pack(side=tk.LEFT, padx=5)

add_button = tk.Button(frame, text="Add Task", command=add_task)
add_button.pack(side=tk.RIGHT)

task_listbox = tk.Listbox(root, width=50, height=15)
task_listbox.pack(pady=10)

delete_button = tk.Button(root, text="Delete Task", command=delete_task)
delete_button.pack()

update_listbox()

root.mainloop()
